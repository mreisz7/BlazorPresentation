name: Deploy Presentation to GitHub Pages

on:
  push:
    branches: [ master ]
  
jobs:
  deploy-to-github-pages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Publish Presentation App
        run: dotnet publish ./src/BlazorPresentation/BlazorPresentation.csproj -c Release -o release --nologo

      # changes the base-tag in index.html from '/' to 'BlazorPresentation' to match GitHub Pages repository subdirectory
      - name: Change base-tag in index.html from / to PresentationTest
        run: sed -i 's/<base href="\/" \/>/<base href="\/BlazorPresentation\/" \/>/g' release/wwwroot/index.html
      
      
      # Fix all hashes in the service worker assets
      - name: Fix service-worker-assets.js hashes
        working-directory: release/wwwroot
        run: |
          jsFile=$(<service-worker-assets.js)
          # remove JavaScript from contents so it can be interpreted as JSON
          json=$(echo "$jsFile" | sed "s/self.assetsManifest = //g" | sed "s/;//g")
          # grab the assets JSON array
          assets=$(echo "$json" | jq '.assets[]' -c)
          for asset in $assets
          do
            oldHash=$(echo "$asset" | jq '.hash')
            #remove leading and trailing quotes
            oldHash="${oldHash:1:-1}"
            path=$(echo "$asset" | jq '.url')
            #remove leading and trailing quotes
            path="${path:1:-1}"
            newHash="sha256-$(openssl dgst -sha256 -binary $path | openssl base64 -A)"
            
            if [ $oldHash != $newHash ]; then
              # escape slashes for json
              oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
              newHash=$(echo "$newHash" | sed 's;/;\\/;g')
              echo "Updating hash for $path from $oldHash to $newHash"
              # escape slashes second time for sed
              oldHash=$(echo "$oldHash" | sed 's;/;\\/;g')
              jsFile=$(echo -n "$jsFile" | sed "s;$oldHash;$newHash;g")
            fi
          done

          echo -n "$jsFile" > service-worker-assets.js

      # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll

      # copy index.html to 404.html to serve the same file when a file is not found
      - name: Copy index.html to 404.html
        run: cp release/wwwroot/index.html release/wwwroot/404.html

      - name: Commit wwwroot to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          BRANCH: gh-pages
          FOLDER: release/wwwroot
